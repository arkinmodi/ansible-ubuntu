# yamllint disable rule:line-length
# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json#/$defs/tasks
# yamllint enable rule:line-length
---
- name: Setup virtualenv
  vars:
    target_venv: "{{ ansible_user_dir }}/opt/venv"
    python_packages:
      - autopep8
      - awshelp
      - bwenv
      - flake8
      - podman-compose
      - pynvim
      - tldr
      - tox
      - twine
      - virtualenv
      - yamllint
      - youtube-dl
  block:
    - name: Install venv Module
      ansible.builtin.apt:
        state: present
        name:
          - python3-dev
          - python3-distutils
          - python3-venv
      become: true

    - name: Download virtualenv
      ansible.builtin.get_url:
        url: https://bootstrap.pypa.io/virtualenv.pyz
        dest: /tmp/virtualenv.pyz
        mode: "755"

    - name: Create virtualenv
      ansible.builtin.command:
        cmd: >
          "{{ ansible_python.executable }}"
          /tmp/virtualenv.pyz
          -p /usr/bin/python3
          "{{ target_venv }}"
        creates: "{{ target_venv }}/bin/python3"

    - name: Install Python Packages
      ansible.builtin.pip:
        virtualenv: "{{ target_venv }}"
        state: latest  # noqa package-latest
        name: "{{ python_packages }}"

    - name: Ensure bin folder
      ansible.builtin.file:
        state: directory
        path: "{{ ansible_user_dir }}/bin"
        mode: "755"

    - name: Link Python and Pip Binaries
      ansible.builtin.file:
        state: link
        src: "{{ item }}"
        dest: "{{ ansible_user_dir }}/bin/{{ item | basename }}"
      with_fileglob:
        - "{{ target_venv }}/bin/pip"
        - "{{ target_venv }}/bin/pip3"
        - "{{ target_venv }}/bin/pip3.*"
        - "{{ target_venv }}/bin/python"
        - "{{ target_venv }}/bin/python3"
        - "{{ target_venv }}/bin/python3.*"

    - name: Link Python Package Binaries
      ansible.builtin.file:
        state: link
        src: "{{ target_venv }}/bin/{{ item }}"
        dest: "{{ ansible_user_dir }}/bin/{{ item }}"
      vars:
        no_binary:
          - pynvim
      when: item not in no_binary
      loop: "{{ python_packages }}"
