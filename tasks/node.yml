# yamllint disable rule:line-length
# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json#/$defs/tasks
# yamllint enable rule:line-length
---
- name: Install Nodejs
  when: ansible_machine == 'x86_64' or ansible_machine == 'arm64'
  vars:
    node_version: v20.9.0

    node_x86_archive_name: node-{{ node_version }}-linux-x64
    node_x86_sha256: f0919f092fbf74544438907fa083c21e76b2d7a4bc287f0607ada1553ef16f60  # yamllint disable-line rule:line-length

    node_arm_archive_name: node-{{ node_version }}-linux-arm64
    node_arm_sha256: d2a7dbeeb274bfd16b579d2cafb92f673010df36c83a5b55de3916aad6806a6a  # yamllint disable-line rule:line-length

    node_archive_name: "{{ (ansible_machine == 'x86_64') | ternary(node_x86_archive_name, node_arm_archive_name) }}"  # yamllint disable-line rule:line-length
    node_sha256: "{{ (ansible_machine == 'x86_64') | ternary(node_x86_sha256, node_arm_sha256) }}"  # yamllint disable-line rule:line-length
    node_opt_dir: "{{ common_opt }}/{{ node_archive_name }}"

    npm_packages:
      - "@astrojs/language-server"
      - "@tailwindcss/language-server"
      - prettier
      - typescript
      - typescript-language-server
      - vscode-langservers-extracted
      - yaml-language-server
  block:
    - name: Download Nodejs tar
      ansible.builtin.get_url:
        url: https://nodejs.org/dist/{{ node_version }}/{{ node_archive_name }}.tar.gz  # yamllint disable-line rule:line-length
        checksum: sha256:{{ node_sha256 }}
        dest: "{{ tempdir.path }}/{{ node_archive_name }}.tar.gz"
        mode: "755"

    - name: Unarchive Nodejs tar
      ansible.builtin.unarchive:
        src: "{{ tempdir.path }}/{{ node_archive_name }}.tar.gz"
        dest: "{{ common_opt }}"
        remote_src: true
        creates: "{{ node_opt_dir }}"
        mode: "755"

    - name: Install NPM Packages
      community.general.npm:
        global: true
        name: "{{ item }}"
        state: latest
      loop: "{{ npm_packages }}"
      environment:
        PATH: "{{ node_opt_dir }}/bin:{{ ansible_env.PATH }}"

    - name: Link Nodejs and NPM Package Binaries
      ansible.builtin.file:
        state: link
        src: "{{ item }}"
        dest: "{{ common_bin }}/{{ item | basename }}"
      with_fileglob:
        - "{{ node_opt_dir }}/bin/*"

    - name: Find Old Nodejs
      ansible.builtin.find:
        paths: "{{ common_opt }}"
        pattern: node-v*
        file_type: directory
      register: old_node

    - name: Purge Old Nodejs
      ansible.builtin.file:
        state: absent
        path: "{{ item.path }}"
      vars:
        paths_to_keep:
          - "{{ node_opt_dir }}"
      when: item.path not in paths_to_keep
      loop: "{{ old_node.files }}"
