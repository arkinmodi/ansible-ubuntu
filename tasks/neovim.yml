---
- name: Install Neovim Dependencies
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - ripgrep

      # Build deps
      - ccache
      - cmake
      - curl
      - gettext
      - ninja-build
      - unzip
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Ensure opt folder
  ansible.builtin.file:
    state: directory
    path: "{{ ansible_user_dir }}/opt/neovim"
    mode: "755"

- name: Clone Neovim Repo  # noqa latest[git]
  ansible.builtin.git:
    repo: git@github.com:neovim/neovim
    dest: "{{ ansible_user_dir }}/opt/neovim/repo"
    accept_newhostkey: true
    depth: 1
  register: clone

- name: Purge Old Neovim Build
  when: clone.before != clone.after
  become: true
  ansible.builtin.file:
    state: absent
    path: "{{ ansible_user_dir }}/opt/neovim/repo/build"

- name: Build Neovim
  when: clone.before != clone.after
  become: true
  community.general.make:
    target: install
    chdir: "{{ ansible_user_dir }}/opt/neovim/repo"
    params:
      CMAKE_BUILD_TYPE: Release
      CMAKE_INSTALL_PREFIX: "{{ ansible_user_dir }}/opt/neovim/build"

- name: Ensure bin folder
  ansible.builtin.file:
    state: directory
    path: "{{ ansible_user_dir }}/bin"
    mode: "755"

- name: Link Neovim
  ansible.builtin.file:
    state: link
    src: "{{ ansible_user_dir }}/opt/neovim/build/bin/nvim"
    dest: "{{ ansible_user_dir }}/bin/nvim"

- name: Install Neovim Plugins
  ansible.builtin.command: nvim --headless '+Lazy! restore' +qa
  register: result
  changed_when: result.stderr != ""
